;;
;; Header files for PoolMaster
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Twab$_store
builder $Twab$_store(builder build_0, (int, int) v) inline;

;; $Twab$_load
(slice, ((int, int))) $Twab$_load(slice sc_0) inline;

;; $OpenDraw$_load
(slice, ((int))) $OpenDraw$_load(slice sc_0) inline;

;; $Borrow$_load
(slice, ((int))) $Borrow$_load(slice sc_0) inline;

;; $Repay$_load
(slice, ((int))) $Repay$_load(slice sc_0) inline;

;; $DepositInternal$_load
(slice, ((int, slice))) $DepositInternal$_load(slice sc_0) inline;

;; $WithdrawInternal$_load
(slice, ((int, slice))) $WithdrawInternal$_load(slice sc_0) inline;

;; $DepositFinish$_store
builder $DepositFinish$_store(builder build_0, (int, int) v) inline;

;; $DepositFinish$_store_cell
cell $DepositFinish$_store_cell((int, int) v) inline;

;; $WithdrawFinish$_store
builder $WithdrawFinish$_store(builder build_0, (int, int) v) inline;

;; $WithdrawFinish$_store_cell
cell $WithdrawFinish$_store_cell((int, int) v) inline;

;; $InitDraw$_store
builder $InitDraw$_store(builder build_0, (int, int, slice) v) inline;

;; $InitDraw$_store_cell
cell $InitDraw$_store_cell((int, int, slice) v) inline;

;; $OpenDrawInternal$_store
builder $OpenDrawInternal$_store(builder build_0, (int, int, slice) v) inline;

;; $OpenDrawInternal$_store_cell
cell $OpenDrawInternal$_store_cell((int, int, slice) v) inline;

;; $ChangeOwner$_load
(slice, ((int, slice))) $ChangeOwner$_load(slice sc_0) inline;

;; $ChangeOwnerOk$_store
builder $ChangeOwnerOk$_store(builder build_0, (int, slice) v) inline;

;; $ChangeOwnerOk$_store_cell
cell $ChangeOwnerOk$_store_cell((int, slice) v) inline;

;; $PoolMaster$_store
builder $PoolMaster$_store(builder build_0, (slice, (int, int), int, int, int, int) v) inline;

;; $PoolMaster$_load
(slice, ((slice, (int, int), int, int, int, int))) $PoolMaster$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $StateInit$_as_optional
tuple $StateInit$_as_optional((cell, cell) v) inline;

;; $Context$_get_value
_ $Context$_get_value((int, slice, int, slice) v) inline;

;; $Twab$_to_tuple
tuple $Twab$_to_tuple(((int, int)) v) inline;

;; $PoolMasterData$_to_external
(slice, slice, tuple, int, int, int, int) $PoolMasterData$_to_external(((slice, slice, (int, int), int, int, int, int)) v) inline;

;; $PoolMaster$init$_load
(slice, ((slice))) $PoolMaster$init$_load(slice sc_0) inline;

;; $PoolAccount$init$_store
builder $PoolAccount$init$_store(builder build_0, (slice, slice, slice) v) inline;

;; $Draw$init$_store
builder $Draw$init$_store(builder build_0, (slice, slice, int) v) inline;

;; $PrizeReserve$init$_store
builder $PrizeReserve$init$_store(builder build_0, (slice) v) inline;

;; $Twab$_constructor_timestamp_amount
((int, int)) $Twab$_constructor_timestamp_amount(int timestamp, int amount) inline;

;; $global_new_twab
(int, int) $global_new_twab() impure inline;

;; $PoolMaster$_contract_init
(slice, (int, int), int, int, int, int) $PoolMaster$_contract_init(slice $owner) impure inline_ref;

;; $PoolMaster$_contract_load
(slice, (int, int), int, int, int, int) $PoolMaster$_contract_load() impure inline_ref;

;; $PoolMaster$_contract_store
() $PoolMaster$_contract_store((slice, (int, int), int, int, int, int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline;

;; $Twab$_fun_next_twab
(int, int) $Twab$_fun_next_twab((int, int) $self, int $balance, int $timestamp) impure inline;

;; $PrizeReserve$_init_child
(cell, cell) $PrizeReserve$_init_child(cell sys', slice $pool_master) inline;

;; $PoolMaster$_fun__get_prize_reserve_address
((slice, (int, int), int, int, int, int), slice) $PoolMaster$_fun__get_prize_reserve_address((slice, (int, int), int, int, int, int) $self) impure inline;

;; $PoolAccount$_init_child
(cell, cell) $PoolAccount$_init_child(cell sys', slice $owner, slice $master, slice $prize_reserve) inline;

;; $PoolMaster$_fun__get_account_init
((slice, (int, int), int, int, int, int), (cell, cell)) $PoolMaster$_fun__get_account_init((slice, (int, int), int, int, int, int) $self, slice $user) impure inline;

;; $Draw$_init_child
(cell, cell) $Draw$_init_child(cell sys', slice $pool_master, slice $prize_reserve, int $period) inline;

;; $PoolMaster$_fun__get_draw_init
((slice, (int, int), int, int, int, int), (cell, cell)) $PoolMaster$_fun__get_draw_init((slice, (int, int), int, int, int, int) $self, int $period) impure inline;

;; $PoolMasterData$_constructor_owner_prize_reserve_twab_share_amount_borrow_amount_prize_amount_next_period
((slice, slice, (int, int), int, int, int, int)) $PoolMasterData$_constructor_owner_prize_reserve_twab_share_amount_borrow_amount_prize_amount_next_period(slice owner, slice prize_reserve, (int, int) twab, int share_amount, int borrow_amount, int prize_amount, int next_period) inline;

;; $PoolMaster$_fun_get_core_data
((slice, (int, int), int, int, int, int), (slice, slice, (int, int), int, int, int, int)) $PoolMaster$_fun_get_core_data((slice, (int, int), int, int, int, int) $self) impure inline;

;; $PoolMaster$_fun__get_account_address
((slice, (int, int), int, int, int, int), slice) $PoolMaster$_fun__get_account_address((slice, (int, int), int, int, int, int) $self, slice $user) impure inline;

;; $PoolMaster$_fun_get_account_address
((slice, (int, int), int, int, int, int), slice) $PoolMaster$_fun_get_account_address((slice, (int, int), int, int, int, int) $self, slice $user) impure inline;

;; $PoolMaster$_fun__get_draw_address
((slice, (int, int), int, int, int, int), slice) $PoolMaster$_fun__get_draw_address((slice, (int, int), int, int, int, int) $self, int $period) impure inline;

;; $PoolMaster$_fun_get_draw_address
((slice, (int, int), int, int, int, int), slice) $PoolMaster$_fun_get_draw_address((slice, (int, int), int, int, int, int) $self, int $period) impure inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $PoolMaster$_fun_forward
((slice, (int, int), int, int, int, int), ()) $PoolMaster$_fun_forward((slice, (int, int), int, int, int, int) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline;

;; $PoolMaster$_fun_reply
((slice, (int, int), int, int, int, int), ()) $PoolMaster$_fun_reply((slice, (int, int), int, int, int, int) $self, cell $body) impure inline;

;; $PoolMaster$_fun_notify
((slice, (int, int), int, int, int, int), ()) $PoolMaster$_fun_notify((slice, (int, int), int, int, int, int) $self, cell $body) impure inline;

;; $PoolMaster$_fun_native_reserve
((slice, (int, int), int, int, int, int), ()) $PoolMaster$_fun_native_reserve((slice, (int, int), int, int, int, int) $self) impure inline;

;; $PoolMaster$_fun_require_account
((slice, (int, int), int, int, int, int), ()) $PoolMaster$_fun_require_account((slice, (int, int), int, int, int, int) $self, slice $user) impure inline;

;; $PoolMaster$_fun_requireOwner
((slice, (int, int), int, int, int, int), ()) $PoolMaster$_fun_requireOwner((slice, (int, int), int, int, int, int) $self) impure inline;

;; $PoolMaster$_fun_owner
((slice, (int, int), int, int, int, int), slice) $PoolMaster$_fun_owner((slice, (int, int), int, int, int, int) $self) impure inline;

;; $InitDraw$_constructor_twab_timestamp_twab_amount_refund_address
((int, int, slice)) $InitDraw$_constructor_twab_timestamp_twab_amount_refund_address(int twab_timestamp, int twab_amount, slice refund_address) inline;

;; $SendParameters$_constructor_bounce_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode(int bounce, slice to, int value, int mode) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $OpenDrawInternal$_constructor_twab_timestamp_twab_amount_refund_address
((int, int, slice)) $OpenDrawInternal$_constructor_twab_timestamp_twab_amount_refund_address(int twab_timestamp, int twab_amount, slice refund_address) inline;

;; $DepositFinish$_constructor_timestamp_amount
((int, int)) $DepositFinish$_constructor_timestamp_amount(int timestamp, int amount) inline;

;; $WithdrawFinish$_constructor_timestamp_amount
((int, int)) $WithdrawFinish$_constructor_timestamp_amount(int timestamp, int amount) inline;

;; $ChangeOwnerOk$_constructor_queryId_newOwner
((int, slice)) $ChangeOwnerOk$_constructor_queryId_newOwner(int queryId, slice newOwner) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
