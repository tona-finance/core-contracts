;;
;; Header files for PoolAccount
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_dict_set_int_cell
(cell, ()) __tact_dict_set_int_cell(cell d, int kl, int k, cell v) inline;

;; __tact_dict_get_int_cell
cell __tact_dict_get_int_cell(cell d, int kl, int k) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $Twab$_store
builder $Twab$_store(builder build_0, (int, int) v) inline;

;; $Twab$_store_cell
cell $Twab$_store_cell((int, int) v) inline;

;; $Twab$_load
(slice, ((int, int))) $Twab$_load(slice sc_0) inline;

;; $Twab$_as_optional
tuple $Twab$_as_optional((int, int) v) inline;

;; $Twab$_load_opt
tuple $Twab$_load_opt(cell cl) inline;

;; $TwabStore$_store
builder $TwabStore$_store(builder build_0, (cell, int) v) inline;

;; $TwabStore$_load
(slice, ((cell, int))) $TwabStore$_load(slice sc_0) inline;

;; $DepositInStaker$_store
builder $DepositInStaker$_store(builder build_0, (int) v) inline;

;; $DepositInStaker$_store_cell
cell $DepositInStaker$_store_cell((int) v) inline;

;; $DepositInStaker$_load
(slice, ((int))) $DepositInStaker$_load(slice sc_0) inline;

;; $StakerWithdrawal$_load
(slice, ((int))) $StakerWithdrawal$_load(slice sc_0) inline;

;; $TokenNotification$_load
(slice, ((int, int, slice, slice))) $TokenNotification$_load(slice sc_0) inline;

;; $TokenTransfer$_store
builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $TokenTransfer$_store_cell
cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $TokenBurn$_store
builder $TokenBurn$_store(builder build_0, (int, int, slice, cell) v) inline;

;; $TokenBurn$_store_cell
cell $TokenBurn$_store_cell((int, int, slice, cell) v) inline;

;; $WithdrawInternal$_store
builder $WithdrawInternal$_store(builder build_0, (int, slice, int, int, int) v) inline;

;; $WithdrawInternal$_store_cell
cell $WithdrawInternal$_store_cell((int, slice, int, int, int) v) inline;

;; $WithdrawFinishInternal$_store
builder $WithdrawFinishInternal$_store(builder build_0, (int, slice, int, int) v) inline;

;; $WithdrawFinishInternal$_store_cell
cell $WithdrawFinishInternal$_store_cell((int, slice, int, int) v) inline;

;; $InitPoolAccountInternal$_load
(slice, ((slice))) $InitPoolAccountInternal$_load(slice sc_0) inline;

;; $InitTicketInternal1$_load
(slice, ((int, int, int, int))) $InitTicketInternal1$_load(slice sc_0) inline;

;; $Deposit$_load
(slice, ((int))) $Deposit$_load(slice sc_0) inline;

;; $Withdraw$_load
(slice, ((int, int))) $Withdraw$_load(slice sc_0) inline;

;; $InitTicketInternal2$_store
builder $InitTicketInternal2$_store(builder build_0, (int, int) v) inline;

;; $InitTicketInternal2$_store_cell
cell $InitTicketInternal2$_store_cell((int, int) v) inline;

;; $PoolAccount$_store
builder $PoolAccount$_store(builder build_0, (slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) v) inline;

;; $PoolAccount$_load
(slice, ((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice))) $PoolAccount$_load(slice sc_0) inline;

;; $StateInit$_get_code
_ $StateInit$_get_code((cell, cell) v) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $StateInit$_as_optional
tuple $StateInit$_as_optional((cell, cell) v) inline;

;; $Twab$_not_null
((int, int)) $Twab$_not_null(tuple v) inline;

;; $Twab$_to_external
(int, int) $Twab$_to_external(((int, int)) v) inline;

;; $PoolAccountData$_to_external
(slice, slice, slice, slice, slice, int, int, int) $PoolAccountData$_to_external(((slice, slice, slice, slice, slice, int, int, int)) v) inline;

;; $Draw$init$_store
builder $Draw$init$_store(builder build_0, (slice, slice, int) v) inline;

;; $Ticket$init$_store
builder $Ticket$init$_store(builder build_0, (slice, slice, slice, int) v) inline;

;; $PoolAccount$init$_load
(slice, ((slice, slice, slice, slice))) $PoolAccount$init$_load(slice sc_0) inline;

;; $TwabStore$_constructor_store_size
((cell, int)) $TwabStore$_constructor_store_size(cell store, int size) inline;

;; $global_new_twab_store
(cell, int) $global_new_twab_store() impure inline;

;; $PoolAccount$_contract_init
(slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $PoolAccount$_contract_init(slice $owner, slice $master, slice $staker, slice $reserve) impure inline_ref;

;; $PoolAccount$_contract_load
(slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $PoolAccount$_contract_load() impure inline_ref;

;; $PoolAccount$_contract_store
() $PoolAccount$_contract_store((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline;

;; $Twab$_constructor_timestamp_amount
((int, int)) $Twab$_constructor_timestamp_amount(int timestamp, int amount) inline;

;; $global_average_balance
int $global_average_balance((int, int) $start, (int, int) $end) impure inline;

;; $Builder$_fun_asSlice
slice $Builder$_fun_asSlice(builder $self) impure inline;

;; $Builder$_fun_storeTimestamp
builder $Builder$_fun_storeTimestamp(builder $self, int $timestamp) impure inline;

;; $Context$_fun_readForwardFee
int $Context$_fun_readForwardFee((int, slice, int, slice) $self) impure inline;

;; $Twab$_fun_next_twab
(int, int) $Twab$_fun_next_twab((int, int) $self, int $balance, int $timestamp) impure inline;

;; $TwabStore$_fun_binary_search_twab
(int, int) $TwabStore$_fun_binary_search_twab((cell, int) $self, int $timestamp) impure inline;

;; $TwabStore$_fun_insert
((cell, int), ()) $TwabStore$_fun_insert((cell, int) $self, int $balance, int $timestamp) impure inline;

;; $Draw$_init_child
(cell, cell) $Draw$_init_child(cell sys', slice $pool_master, slice $reserve, int $period) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $Ticket$_init_child
(cell, cell) $Ticket$_init_child(cell sys', slice $owner, slice $pool_account, slice $draw, int $period) inline;

;; $PoolAccount$_fun__get_draw_init
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), (cell, cell)) $PoolAccount$_fun__get_draw_init((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccount$_fun__get_draw_address
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), slice) $PoolAccount$_fun__get_draw_address((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccount$_fun__get_ticket_init
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), (cell, cell)) $PoolAccount$_fun__get_ticket_init((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccountData$_constructor_owner_master_staker_reserve_jetton_wallet_share_amount_contribute_amount_withdraw_amount
((slice, slice, slice, slice, slice, int, int, int)) $PoolAccountData$_constructor_owner_master_staker_reserve_jetton_wallet_share_amount_contribute_amount_withdraw_amount(slice owner, slice master, slice staker, slice reserve, slice jetton_wallet, int share_amount, int contribute_amount, int withdraw_amount) inline;

;; $PoolAccount$_fun_get_core_data
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), (slice, slice, slice, slice, slice, int, int, int)) $PoolAccount$_fun_get_core_data((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self) impure inline;

;; $PoolAccount$_fun_get_draw_code
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), cell) $PoolAccount$_fun_get_draw_code((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccount$_fun_get_ticket_code
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), cell) $PoolAccount$_fun_get_ticket_code((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccount$_fun_get_draw_address
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), slice) $PoolAccount$_fun_get_draw_address((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccount$_fun__get_ticket_address
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), slice) $PoolAccount$_fun__get_ticket_address((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccount$_fun_get_ticket_address
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), slice) $PoolAccount$_fun_get_ticket_address((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $period) impure inline;

;; $PoolAccount$_fun_get_deposit_cache
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), int) $PoolAccount$_fun_get_deposit_cache((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $query_id) impure inline;

;; $PoolAccount$_fun_get_twab_size
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), int) $PoolAccount$_fun_get_twab_size((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self) impure inline;

;; $PoolAccount$_fun_binary_search_twab
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), (int, int)) $PoolAccount$_fun_binary_search_twab((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $timestamp) impure inline;

;; $PoolAccount$_fun_forward
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_forward((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline;

;; $PoolAccount$_fun_notify
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_notify((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, cell $body) impure inline;

;; $TokenTransfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload
((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_query_id_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload(int query_id, int amount, slice destination, slice response_destination, cell custom_payload, int forward_ton_amount, slice forward_payload) inline;

;; $PoolAccount$_fun_on_jetton_minted
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_on_jetton_minted((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $query_id, int $amount) impure inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $TokenBurn$_constructor_query_id_amount_response_destination_custom_payload
((int, int, slice, cell)) $TokenBurn$_constructor_query_id_amount_response_destination_custom_payload(int query_id, int amount, slice response_destination, cell custom_payload) inline;

;; $PoolAccount$_fun_on_jetton_received_from_master
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_on_jetton_received_from_master((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, int $query_id, int $amount) impure inline;

;; $PoolAccount$_fun_require_master
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_require_master((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self) impure inline;

;; $PoolAccount$_fun_require_jetton_wallet
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_require_jetton_wallet((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self) impure inline;

;; $PoolAccount$_fun_require_staker
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_require_staker((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self) impure inline;

;; $PoolAccount$_fun_requireOwner
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), ()) $PoolAccount$_fun_requireOwner((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self) impure inline;

;; $PoolAccount$_fun_owner
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), slice) $PoolAccount$_fun_owner((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self) impure inline;

;; $PoolAccount$_fun_msg_value
((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice), int) $PoolAccount$_fun_msg_value((slice, slice, slice, slice, cell, (cell, int), int, int, int, slice) $self, (int, slice, int, slice) $ctx, int $gas_consumption) impure inline;

;; $InitTicketInternal2$_constructor_draw_avg_balance_user_avg_balance
((int, int)) $InitTicketInternal2$_constructor_draw_avg_balance_user_avg_balance(int draw_avg_balance, int user_avg_balance) inline;

;; $WithdrawFinishInternal$_constructor_query_id_user_timestamp_amount
((int, slice, int, int)) $WithdrawFinishInternal$_constructor_query_id_user_timestamp_amount(int query_id, slice user, int timestamp, int amount) inline;

;; $DepositInStaker$_constructor_query_id
((int)) $DepositInStaker$_constructor_query_id(int query_id) inline;

;; $WithdrawInternal$_constructor_query_id_user_withdraw_amount_acc_contribute_amount_acc_withdraw_amount
((int, slice, int, int, int)) $WithdrawInternal$_constructor_query_id_user_withdraw_amount_acc_contribute_amount_acc_withdraw_amount(int query_id, slice user, int withdraw_amount, int acc_contribute_amount, int acc_withdraw_amount) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
