;;
;; Type: ComputePickNumber
;; Header: 0x28b5ae3b
;; TLB: compute_pick_number#28b5ae3b index:uint32 expected_number:uint32 = ComputePickNumber
;;

(slice, ((int, int))) $ComputePickNumber$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 682995259);
    var v'index = sc_0~load_uint(32);
    var v'expected_number = sc_0~load_uint(32);
    return (sc_0, (v'index, v'expected_number));
}

;;
;; Type: ComputePickPayload
;; Header: 0xa0188134
;; TLB: compute_pick_payload#a0188134 index_payload:^slice = ComputePickPayload
;;

(slice, ((slice))) $ComputePickPayload$_load(slice sc_0) inline {
    throw_unless(129, sc_0~load_uint(32) == 2685960500);
    var v'index_payload = sc_0~load_ref().begin_parse();
    return (sc_0, (v'index_payload));
}

;;
;; Type: TicketTester
;;

builder $TicketTester$_store(builder build_0, (slice, int, cell) v) inline {
    var (v'owner, v'picks, v'used_indexes) = v;
    build_0 = __tact_store_address(build_0, v'owner);
    build_0 = build_0.store_uint(v'picks, 32);
    build_0 = build_0.store_dict(v'used_indexes);
    return build_0;
}

(slice, ((slice, int, cell))) $TicketTester$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'picks = sc_0~load_uint(32);
    var v'used_indexes = sc_0~load_dict();
    return (sc_0, (v'owner, v'picks, v'used_indexes));
}

(slice, ((slice, int))) $TicketTester$init$_load(slice sc_0) inline {
    var v'owner = sc_0~__tact_load_address();
    var v'size = sc_0~load_int(257);
    return (sc_0, (v'owner, v'size));
}

(slice, int, cell) $TicketTester$_contract_load() impure inline_ref {
    slice $sc = get_data().begin_parse();
    __tact_context_sys = $sc~load_ref();
    int $loaded = $sc~load_int(1);
    if ($loaded) {
        return $sc~$TicketTester$_load();
    } else {
        ;; Allow only workchain deployments
        throw_unless(137, my_address().preload_uint(11) == 1024);
        (slice owner, int size) = $sc~$TicketTester$init$_load();
        $sc.end_parse();
        return $TicketTester$_contract_init(owner, size);
    }
}

() $TicketTester$_contract_store((slice, int, cell) v) impure inline {
    builder b = begin_cell();
    b = b.store_ref(__tact_context_sys);
    b = b.store_int(true, 1);
    b = $TicketTester$_store(b, v);
    set_data(b.end_cell());
}