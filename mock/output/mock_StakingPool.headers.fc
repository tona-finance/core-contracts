;;
;; Header files for StakingPool
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $JettonMint$_store
builder $JettonMint$_store(builder build_0, (int, int, int, slice) v) inline;

;; $JettonMint$_store_cell
cell $JettonMint$_store_cell((int, int, int, slice) v) inline;

;; $PoolDeposit$_load
(slice, ((int))) $PoolDeposit$_load(slice sc_0) inline;

;; $PoolWithdraw$_load
(slice, ((int, int, int, slice, slice))) $PoolWithdraw$_load(slice sc_0) inline;

;; $PoolWithdrawal$_store
builder $PoolWithdrawal$_store(builder build_0, (int) v) inline;

;; $PoolWithdrawal$_store_cell
cell $PoolWithdrawal$_store_cell((int) v) inline;

;; $StakingPool$_store
builder $StakingPool$_store(builder build_0, (cell) v) inline;

;; $StakingPool$_load
(slice, ((cell))) $StakingPool$_load(slice sc_0) inline;

;; $StateInit$_not_null
((cell, cell)) $StateInit$_not_null(tuple v) inline;

;; $StateInit$_as_optional
tuple $StateInit$_as_optional((cell, cell) v) inline;

;; $JettonMaster$init$_store
builder $JettonMaster$init$_store(builder build_0, (slice, cell) v) inline;

;; $StakingPool$init$_load
(slice, ((cell))) $StakingPool$init$_load(slice sc_0) inline;

;; $StakingPool$_contract_init
(cell) $StakingPool$_contract_init(cell $jetton_content) impure inline_ref;

;; $StakingPool$_contract_load
(cell) $StakingPool$_contract_load() impure inline_ref;

;; $StakingPool$_contract_store
() $StakingPool$_contract_store((cell) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline;

;; $JettonMaster$_init_child
(cell, cell) $JettonMaster$_init_child(cell sys', slice $owner, cell $jetton_content) inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body_code_data(int bounce, slice to, int value, int mode, cell body, cell code, cell data) inline;

;; $StakingPool$_fun_jetton_master_init
((cell), (cell, cell)) $StakingPool$_fun_jetton_master_init((cell) $self) impure inline;

;; $StakingPool$_fun_jetton_master_address
((cell), slice) $StakingPool$_fun_jetton_master_address((cell) $self) impure inline;

;; $StakingPool$_fun_jetton_master
((cell), slice) $StakingPool$_fun_jetton_master((cell) $self) impure inline;

;; $StakingPool$_fun_forward
((cell), ()) $StakingPool$_fun_forward((cell) $self, slice $to, cell $body, int $bounce, tuple $init) impure inline;

;; $StakingPool$_fun_notify
((cell), ()) $StakingPool$_fun_notify((cell) $self, cell $body) impure inline;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $JettonMint$_constructor_query_id_receiver_total_balance_deposit_amount
((int, int, int, slice)) $JettonMint$_constructor_query_id_receiver_total_balance_deposit_amount(int query_id, slice receiver, int total_balance, int deposit_amount) inline;

;; $PoolWithdrawal$_constructor_query_id
((int)) $PoolWithdrawal$_constructor_query_id(int query_id) inline;

;; $SendParameters$_constructor_bounce_to_value_mode
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode(int bounce, slice to, int value, int mode) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
