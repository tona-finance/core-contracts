;;
;; Header files for JettonMaster
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $JettonInternalTransfer$_store
builder $JettonInternalTransfer$_store(builder build_0, (int, int, slice, slice, int, cell) v) inline_ref;

;; $JettonInternalTransfer$_store_cell
cell $JettonInternalTransfer$_store_cell((int, int, slice, slice, int, cell) v) inline;

;; $JettonBurnNotification$_load
(slice, ((int, int, slice, slice))) $JettonBurnNotification$_load(slice sc_0) inline;

;; $JettonMint$_load
(slice, ((int, int, int, slice))) $JettonMint$_load(slice sc_0) inline;

;; $PoolWithdraw$_store
builder $PoolWithdraw$_store(builder build_0, (int, int, int, slice, slice) v) inline;

;; $PoolWithdraw$_store_cell
cell $PoolWithdraw$_store_cell((int, int, int, slice, slice) v) inline;

;; $JettonMaster$_store
builder $JettonMaster$_store(builder build_0, (int, slice, cell) v) inline;

;; $JettonMaster$_load
(slice, ((int, slice, cell))) $JettonMaster$_load(slice sc_0) inline;

;; $StateInit$_get_code
_ $StateInit$_get_code((cell, cell) v) inline;

;; $JettonData$_to_external
(int, int, slice, cell, cell) $JettonData$_to_external(((int, int, slice, cell, cell)) v) inline;

;; $JettonMaster$init$_load
(slice, ((slice, cell))) $JettonMaster$init$_load(slice sc_0) inline;

;; $JettonWallet$init$_store
builder $JettonWallet$init$_store(builder build_0, (slice, slice) v) inline;

;; $JettonMaster$_contract_init
(int, slice, cell) $JettonMaster$_contract_init(slice $owner, cell $jetton_content) impure inline_ref;

;; $JettonMaster$_contract_load
(int, slice, cell) $JettonMaster$_contract_load() impure inline_ref;

;; $JettonMaster$_contract_store
() $JettonMaster$_contract_store((int, slice, cell) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline;

;; $JettonWallet$_init_child
(cell, cell) $JettonWallet$_init_child(cell sys', slice $owner, slice $jetton_master) inline;

;; $JettonMaster$_fun_calculate_jetton_wallet_init
((int, slice, cell), (cell, cell)) $JettonMaster$_fun_calculate_jetton_wallet_init((int, slice, cell) $self, slice $owner_address) impure inline;

;; $JettonMaster$_fun__mint_validate
((int, slice, cell), ()) $JettonMaster$_fun__mint_validate((int, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, int, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body_code_data
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body_code_data(slice to, int value, int bounce, int mode, cell body, cell code, cell data) inline;

;; $JettonInternalTransfer$_constructor_query_id_amount_response_address_from_forward_ton_amount_forward_payload
((int, int, slice, slice, int, cell)) $JettonInternalTransfer$_constructor_query_id_amount_response_address_from_forward_ton_amount_forward_payload(int query_id, int amount, slice response_address, slice from, int forward_ton_amount, cell forward_payload) inline;

;; $JettonMaster$_fun__compute_mint_amount
((int, slice, cell), int) $JettonMaster$_fun__compute_mint_amount((int, slice, cell) $self, (int, int, int, slice) $msg) impure inline;

;; $JettonMaster$_fun__mint
((int, slice, cell), ()) $JettonMaster$_fun__mint((int, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, int, slice) $msg) impure inline;

;; $JettonMaster$_fun__burn_notification_validate
((int, slice, cell), ()) $JettonMaster$_fun__burn_notification_validate((int, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice) $msg) impure inline;

;; $SendParameters$_constructor_to_value_bounce_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_bounce_mode_body(slice to, int value, int bounce, int mode, cell body) inline;

;; $PoolWithdraw$_constructor_query_id_total_supply_jetton_amount_from_address_response_address
((int, int, int, slice, slice)) $PoolWithdraw$_constructor_query_id_total_supply_jetton_amount_from_address_response_address(int query_id, int total_supply, int jetton_amount, slice from_address, slice response_address) inline;

;; $JettonMaster$_fun__burn_notification
((int, slice, cell), ()) $JettonMaster$_fun__burn_notification((int, slice, cell) $self, (int, slice, int, slice) $ctx, (int, int, slice, slice) $msg) impure inline;

;; $JettonData$_constructor_total_supply_mintable_admin_address_jetton_content_jetton_wallet_code
((int, int, slice, cell, cell)) $JettonData$_constructor_total_supply_mintable_admin_address_jetton_content_jetton_wallet_code(int total_supply, int mintable, slice admin_address, cell jetton_content, cell jetton_wallet_code) inline;

;; $JettonMaster$_fun_get_jetton_data
((int, slice, cell), (int, int, slice, cell, cell)) $JettonMaster$_fun_get_jetton_data((int, slice, cell) $self) impure inline;

;; $JettonMaster$_fun_get_wallet_address
((int, slice, cell), slice) $JettonMaster$_fun_get_wallet_address((int, slice, cell) $self, slice $owner_address) impure inline;
